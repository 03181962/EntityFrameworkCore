queue:
  name: Hosted VS2017
  timeoutInMinutes: 60
steps:
- checkout: self
  clean: true
- powershell: |
    iwr https://download.sysinternals.com/files/Procdump.zip -o procdump.zip;
    iwr https://www.nuget.org/api/v2/package/xunit.runner.console/2.4.0 -o xunit.zip;
    Expand-Archive ./xunit.zip -DestinationPath obj/xunit/;
    Expand-Archive ./procdump.zip -DestinationPath obj/procdump/;
  displayName: Download tools
- script: .\build.cmd -ci /bl:artifacts/logs/build.binlog /p:SkipTests=true
- powershell: |
    $cwd = Get-Location
    $job = Start-Job -ScriptBlock {
      set-location $using:cwd
      sleep -seconds 720
      & ./obj/procdump/procdump64.exe -accepteula -n 2 -ma xunit.console.exe artifacts/logs/
    }
    try {
      & ./obj/xunit/tools/net461/xunit.console.exe ./test/EFCore.SqlServer.FunctionalTests/bin/Release/net461/Microsoft.EntityFrameworkCore.SqlServer.FunctionalTests.dll -verbose;
      if ($LASTEXITCODE -ne 0) {
        throw 'Tests failed'
      }
    }
    finally {
      Receive-Job $job
    }
  timeoutInMinutes: 15
  displayName: Run xunit
- task: PublishBuildArtifacts@1
  displayName: Upload binlog
  condition: always()
  inputs:
    artifactName: logs
    artifactType: Container
    pathtoPublish: artifacts/logs/
- powershell: |
   $all_Processes = gwmi win32_process -ComputerName . | select ProcessID,ParentProcessID,Description,@{l="Username";e={$_.getowner().user}},CommandLine | where{$_.Username -like $env:username}
   write-host -f Magenta "------All------"
   $all_Processes
   $all_processIDs = $all_Processes.Processid
   $parent_processIDs = $all_Processes.ParentProcessId
   $gone = New-Object System.Collections.ArrayList
   $parent_processIDs | Sort-Object -Unique | ForEach-Object {
       if ($all_processIDs -notcontains $_)
       {
           $gone.Add($_) | Out-Null
       }
   }
   write-host -f Magenta "------Orphaned------"
   $all_Processes | Where-Object {$gone -contains $_.ParentProcessId} | ForEach-Object {$_}
  displayName: List processes
  condition: always()
